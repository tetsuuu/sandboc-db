version: 2

defaults: &defaults
  working_directory: /var/tmp
  environment:
    # STAGE: $CIRCLE_BRANCH
    ACCOUNT: poc
    BUCKET: tk-infra-dev
  docker:
    - image: hashicorp/terraform:0.12.5
      user: root #

workflows:
  version: 2
  plan_and_apply:
    jobs:
      - checkout_code
      - lint:
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - develop
      - init:
          requires:
            - checkout_code
      - plan:
          requires:
            - init
      - send-approval-link:
          requires:
            - plan
      - hold:
          type: approval
          requires:
            - plan
      - apply:
          requires:
            - hold

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - persist_to_workspace:
          root: /var/tmp

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /var/tmp
      - run:
          name: terraform fmt
          command: |
            if [ $(terraform fmt | grep -v .terraform | tee fmt_result.txt | wc -l) -gt 0 ]; then
              echo "Format of this terraform files is not appropriate:"
              echo
              cat fmt_result.txt
              echo
              echo "Please run terraform fmt"
              exit 1
            fi

  init:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /var/tmp
      - run: echo "export STAGE=${$CIRCLE_BRANCH}" >> $BASH_ENV
      - run: ./prep_backend.sh -a ${ACCOUNT} -b ${BUCKET} -s ${STAGE} > terraform.tf
      - run: terraform init -input=false
      - persist_to_workspace:
          root: /var/tmp

  plan:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /var/tmp
      - run: rm -f "plan.out"
      #- run: terraform plan -var-file=./config/${ACCOUNT}/${STAGE}.tfvars -input=false -out=plan.out
      - run: terraform plan -var-file=./config/sandbox.tfvars -input=false -out=plan.out
      - persist_to_workspace:
          root: /var/tmp

  send-approval-link:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - run:
          name: notify to slack
          command: |
            curl -X POST \
            --data-urlencode "payload={
             "username": "circleci",
             "text": "${CIRCLE_JOB} ${STAGE} waiting for Infra deployment.\n ${CIRCLE_BUILD_URL}",
             "icon_emoji": ":circleci:"
            }" \
            ${SLACK_WEB_HOOK}

  apply:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /var/tmp
      - run: terraform apply -input=false --auto-approve plan.out
